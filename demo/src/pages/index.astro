---
import Layout from "../layouts/Layout.astro";

import Label from "../components/Label.astro";
---

<script>
  const btn = document.getElementById("test-btn") as HTMLElement;
  const grid = document.getElementById("astro-layout-grid") as HTMLElement;

  btn.addEventListener("click", () => {
    grid.style.display = grid.style.display === "block" ? "none" : "block";
  });
</script>

<Layout>
  <section
    class="z-[2] mx-auto flex h-full w-full max-w-[1728px] items-center justify-center px-4 md:px-5"
  >
    <div class="flex flex-col items-center gap-6 md:gap-8">
      <div class="flex flex-col items-center gap-5 text-center">
        <Label />

        <div class="flex max-w-none flex-col items-center gap-4 md:max-w-2/3">
          <h1 class="text-4xl font-bold md:text-5xl">
            A <span class="color-highlight">0-deps</span> layout-grid component for
            AstroJS
          </h1>

          <div class="max-w-4/5">
            <p class="text-body secondary">
              Seamlessly integrate a zero-dependency responsive grid layout into
              your AstroJS projects. (Fully adjustable ofc)
            </p>
          </div>
        </div>
      </div>
      <div class="flex flex-col items-center gap-4">
        <button
          class="relative flex w-fit cursor-pointer flex-col justify-center overflow-hidden rounded-md border-[2px] border-black bg-white px-4 py-2 text-sm shadow-[3px_3px_0px_1.5px_#000000] transition-all duration-200 ease-out hover:translate-x-[2px] hover:translate-y-[2px] hover:shadow-[0.5px_0.5px_0px_0.25px_#000000] md:text-base"
          id="test-btn">&#x2318; + &#x21E7; + g or click</button
        >
        <pre
          class="rounded-sm border-2 border-black/25 bg-white px-3 py-1 text-xs text-black/50 hover:cursor-copy">npm install astro-layoutgrid</pre>
      </div>
    </div>
  </section>
</Layout>
